{"name":"Lumi1","type":"virtual_device","properties":{"deviceIcon":0,"currentIcon":"0","log":"","logTemp":"","mainLoop":"local selfId = fibaro:getSelfId();\n\nlocal num=fibaro:getValue(selfId,'TCPPort')\nlocal bien=fibaro:getGlobal(\"Lumi\")\n--fibaro:debug(bien)\nbien=json.decode(bien)\n--fibaro:debug(bien[tonumber(num)])\nlocal ON=string.char(0x02,0x00,0x00,0x00)\nlocal OFF=string.char(0x01,0x00,0x00,0x00)\nif bien[tonumber(num)]== ON then\n  fibaro:debug(\"ON\")\n  fibaro:call(selfId,\"setProperty\",\"ui.Label1.value\", \"ON\")\nelseif bien[tonumber(num)]== OFF then\n  fibaro:debug(\"OFF\")\n  fibaro:call(selfId,\"setProperty\",\"ui.Label1.value\", \"OFF\")\n    \nend\n","ui.Label1.value":"ON","visible":"true","rows":[{"type":"label","elements":[{"id":1,"lua":false,"waitForResponse":false,"caption":"","name":"Label1","favourite":false,"main":false}]},{"type":"button","elements":[{"id":2,"lua":true,"waitForResponse":false,"caption":"Change","name":"Button11","empty":false,"msg":"local selfId = fibaro:getSelfId();\nlocal status = fibaro:get(selfId,\"ui.Label1.value\")\nif status == \"ON\" then\n  fibaro:call(selfId, \"pressButton\", \"4\");\n  \nelse\n  fibaro:call(selfId, \"pressButton\", \"3\");\n  fibaro:call(selfId,\"setProperty\",\"ui.Label1.value\", \"ON\")\nend","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":3,"lua":true,"waitForResponse":false,"caption":"ON","name":"Button21","empty":false,"msg":"chedo=\"ON\"\nlocal selfId = fibaro:getSelfId();\nip=fibaro:getValue(selfId,'IPAddress')\nma=tonumber(fibaro:getValue(selfId,'TCPPort'))\nfibaro:call(selfId,\"setProperty\",\"ui.Label1.value\", \"ON\")\n------------------------\n-- Ham chi dung cho nut OFF\nfunction bxor(a, b) local x,i,r;r=0; for i = 0, 31 do x = a / 2 + b / 2; if (x~=math.floor(x)) then r = r + 2^i; end a = math.floor(a / 2); b = math.floor(b / 2); end return r; end\nfunction checkSum1(t) local i,b,c;c=0; for i = 1, #t do b = string.byte(t, i); if (c==0) then c = b; else c = bxor(c, b); end if (i>100) then break; end end return c; end\nfunction DEC_HEX(IN) local B,K,OUT,I,D=16,\"0123456789ABCDEF\",\"\",0 while IN>0 do I=I+1 IN,D=math.floor(IN/B),math.mod(IN,B)+1 OUT=string.sub(K,D,D)..OUT end return OUT end\nfunction num2hex(num) local hexstr = '0123456789abcdef' local s = '' while num > 0 do local mod = math.fmod(num, 16) s = string.sub(hexstr, mod+1, mod+1) .. s num = math.floor(num / 16) end if s == '' then s = '0' end return s end\nfunction str2hex(str) local hex = '' while #str > 0 do local hb = num2hex(string.byte(str, 1, 1)) if #hb < 2 then hb = '0' .. hb end hex = hex .. hb str = string.sub(str, 2) end return hex end\nfunction str2hex_(str) local hex = '' while #str > 0 do local hb = num2hex(string.byte(str, 1, 1)) if #hb < 2 then hb = '0' .. hb end hex = hex .. hb .. \"-\" str = string.sub(str, 2) end return hex end\n\nfunction returnlogin(hex) end\nfunction chuyendoi(num) OFF=0 if chedo==\"ON\" then OFF= 0x02 else OFF=0x01  end return OFF end\nfunction checksum_data(data) check=checkSum1(data .. string.char(0x0d)) check=\"0x\" .. num2hex(check) data = data .. string.char(check) return data end\nfunction checksum_data_no(data) check=checkSum1(data) check=\"0x\" .. num2hex(check) fibaro:debug(\"checksum \".. check) data = data .. string.char(check) return data end\nma1=0x00\nOFF=chuyendoi(num)\n--ma=num2hex(ma)\n\nif (ma>255) then\n  ma1=ma/255\n  ma1=\"0x\" .. num2hex(ma1)\n  ma=ma%255\n  ma=\"0x\" .. num2hex(ma)\nelse\n  ma1=0x00\n  ma=\"0x\" .. num2hex(ma)\nend\nfibaro:debug(ma)  \nlogin = string.char(0x18, 0x02, 0x01, 0x05, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x42, 0x00, 0x5c, 0x01, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0x31, 0x30, 0x61, 0x64, 0x63, 0x33, 0x39, 0x34, 0x39, 0x62, 0x61, 0x35, 0x39, 0x61, 0x62, 0x62, 0x65, 0x35, 0x36, 0x65, 0x30, 0x35, 0x37, 0x66, 0x32, 0x30, 0x66, 0x38, 0x38, 0x33, 0x65)\ntcpSocket = Net.FTcpSocket(ip,8686) \nbytes, errorCode = tcpSocket:write(login);\nstate = tcpSocket:read()\nstate3=string.sub(state,5,12)\n--nhan ma id tu SOhieu\ndatabegin=string.char(0x18, 0x02, 0x01, 0x05) .. state3 .. state3 .. string.char(0x01, 0x00, 0x0a, 0x00)\ndatabegin=checksum_data_no(databegin)\ndata = databegin .. string.char(0x12,0x05,0x01,0x00,ma,ma1 , OFF, 0x00, 0x00, 0x00) --, 0x8e\nbytes, errorCode = tcpSocket:write(checksum_data(data));\nstate = tcpSocket:read()","buttonIcon":0,"favourite":false,"main":false},{"id":4,"lua":true,"waitForResponse":false,"caption":"OFF","name":"Button22","empty":false,"msg":"chedo=\"OFF\"\nlocal selfId = fibaro:getSelfId();\nma=tonumber(fibaro:getValue(selfId,'TCPPort'))\nip=fibaro:getValue(selfId,'IPAddress')\nfibaro:call(selfId,\"setProperty\",\"ui.Label1.value\", \"OFF\")\n------------------------\n-- Ham chi dung cho nut OFF\nfunction bxor(a, b) local x,i,r;r=0; for i = 0, 31 do x = a / 2 + b / 2; if (x~=math.floor(x)) then r = r + 2^i; end a = math.floor(a / 2); b = math.floor(b / 2); end return r; end\nfunction checkSum1(t) local i,b,c;c=0; for i = 1, #t do b = string.byte(t, i); if (c==0) then c = b; else c = bxor(c, b); end if (i>100) then break; end end return c; end\nfunction DEC_HEX(IN) local B,K,OUT,I,D=16,\"0123456789ABCDEF\",\"\",0 while IN>0 do I=I+1 IN,D=math.floor(IN/B),math.mod(IN,B)+1 OUT=string.sub(K,D,D)..OUT end return OUT end\nfunction num2hex(num) local hexstr = '0123456789abcdef' local s = '' while num > 0 do local mod = math.fmod(num, 16) s = string.sub(hexstr, mod+1, mod+1) .. s num = math.floor(num / 16) end if s == '' then s = '0' end return s end\nfunction str2hex(str) local hex = '' while #str > 0 do local hb = num2hex(string.byte(str, 1, 1)) if #hb < 2 then hb = '0' .. hb end hex = hex .. hb str = string.sub(str, 2) end return hex end\nfunction str2hex_(str) local hex = '' while #str > 0 do local hb = num2hex(string.byte(str, 1, 1)) if #hb < 2 then hb = '0' .. hb end hex = hex .. hb .. \"-\" str = string.sub(str, 2) end return hex end\n\nfunction returnlogin(hex) end\nfunction chuyendoi(num) OFF=0 if chedo==\"ON\" then OFF= 0x02 else OFF=0x01  end return OFF end\nfunction checksum_data(data) check=checkSum1(data .. string.char(0x0d)) check=\"0x\" .. num2hex(check) data = data .. string.char(check) return data end\nfunction checksum_data_no(data) check=checkSum1(data) check=\"0x\" .. num2hex(check) fibaro:debug(\"checksum \".. check) data = data .. string.char(check) return data end\nma1=0x00\nOFF=chuyendoi(num)\nif (ma>255) then\n  ma1=ma/255\n  ma1=\"0x\" .. num2hex(ma1)\n  ma=ma%255\n  ma=\"0x\" .. num2hex(ma)\nelse\n  ma1=0x00\n  ma=\"0x\" .. num2hex(ma)\nend \nlogin = string.char(0x18, 0x02, 0x01, 0x05, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x42, 0x00, 0x5c, 0x01, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0x31, 0x30, 0x61, 0x64, 0x63, 0x33, 0x39, 0x34, 0x39, 0x62, 0x61, 0x35, 0x39, 0x61, 0x62, 0x62, 0x65, 0x35, 0x36, 0x65, 0x30, 0x35, 0x37, 0x66, 0x32, 0x30, 0x66, 0x38, 0x38, 0x33, 0x65)\ntcpSocket = Net.FTcpSocket(ip,8686) \nbytes, errorCode = tcpSocket:write(login);\nstate = tcpSocket:read()\nstate3=string.sub(state,5,12)\n--nhan ma id tu SOhieu\ndatabegin=string.char(0x18, 0x02, 0x01, 0x05) .. state3 .. state3 .. string.char(0x01, 0x00, 0x0a, 0x00)\ndatabegin=checksum_data_no(databegin)\ndata = databegin .. string.char(0x12,0x05,0x01,0x00,ma,ma1 , OFF, 0x00, 0x00, 0x00)\nbytes, errorCode = tcpSocket:write(checksum_data(data));\nstate = tcpSocket:read()","buttonIcon":0,"favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}