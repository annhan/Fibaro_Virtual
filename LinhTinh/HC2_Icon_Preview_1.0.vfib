{"name":"HC2 Icon Preview 1.0","type":"virtual_device","properties":{"deviceIcon":1157,"currentIcon":"1157","log":"","logTemp":"","mainLoop":"--[[\n-----------------------------------------------------------------------------\n-- VD ICON PREVIEW - main loop\n-----------------------------------------------------------------------------\nCopyright (c) 2017 Zoran Sankovic - Sankotronic. All Rights Reserved.\nVersion 1.0\n\n-- VERSION HISTORY ----------------------------------------------------------\n1.0  - First release and only one until Fibaro change REST API :-)\n\n-- COPYRIGHT NOTICE ---------------------------------------------------------\nRedistribution and use of this source code, with or without modification, \nis permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice,\n   this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. The name of the author may not be used to endorse or promote products \n   derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY  COPYRIGHT OWNER  \"AS IS\"  AND ANY  EXPRESS  OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \nMERCHANTABILITY  AND FITNESS FOR A  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\nEVENT  SHALL THE AUTHOR  BE  LIABLE  FOR ANY  DIRECT,  INDIRECT, INCIDENTAL, \nSPECIAL,  EXEMPLARY,  OR CONSEQUENTIAL  DAMAGES  (INCLUDING, BUT NOT LIMITED \nTO, PROCUREMENT  OF SUBSTITUTE  GOODS OR  SERVICES;  LOSS OF USE,  DATA,  OR \nPROFITS;  OR BUSINESS INTERRUPTION)  HOWEVER  CAUSED  AND  ON  ANY THEORY OF \nLIABILITY,  WHETHER  IN  CONTRACT,  STRICT  LIABILITY,  OR  TORT  (INCLUDING \nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--]]\n\n-- BELLOW CODE NO NEED TO MODIFY BY USER ---------------------------------\nlocal codeVersion  = \"1.0\"\nlocal tableVersion = \"1.0\"\nlocal jIcon = api.get(\"/icons\")\nlocal jNet  = api.get(\"/settings/network\")\nlocal iconTable = json.encode({\n                               section      = \"room\",\n                               secName      = \"Rooms\",\n                               path         = \"http://\"..jNet.ip..\"/fibaro/icons/rooms/\", \n                               maxIcon      = #jIcon.room, \n                               lastIcon     = 1, \n                               lastIconID   = jIcon.room[1].id,\n                               lastIconName = jIcon.room[1].iconName,\n                               self_iconID  = 0,\n                               tableversion = tableVersion})\n\nlocal varName = {\n  [\"IconPreview\"] = {\n    value     = iconTable,\n    isEnum    = true,\n    isTable   = true,\n    enumValue = {\"Table\"}\n  },\n}\n\n-- show debug messages in color\nfunction logbug(color, message)\n  for line in message:gmatch(\"[^\\010\\013]+\") do\n    local txt = line:gsub(\"([\\038\\060\\062])\",\n      function(c)\n        return \"&#\"..string.byte(c)..\";\"\n      end)\n    fibaro:debug(('<span style=\"color:%s\">%s</span>'):format(color,txt))\n  end\nend\n\n-- check existence of declared global variables and add them to variable panel\n-- or check for their set values and correct them\nfunction checkGlobalVariable(varName)\n  logbug(\"green\", string.format(\"Icon preview VD version %s - (c) 2017 Sankotronic\", codeVersion));\n  -- Check if variable exist \n  for i , v in pairs(varName) do\n    if fibaro:getGlobalValue(i) == nil then\n\t\t  api.post(\"/globalVariables/\", {\n        \tname = i\n      });\n      fibaro:sleep(400)\n    \tapi.put(\"/globalVariables/\"..i, {\n        name       = i,\n        value      = v.value,\n        isEnum     = v.isEnum,\n        enumValues = v.enumValue\n      })\n      if v.isTable then\n        ok, msg = pcall(function() wT = json.decode(fibaro:getGlobalValue(i))\n                      if type(wT) ~= \"table\" then error() end end )\n        if not ok then\n          logbug(\"red\", string.format(\"ERROR - Creating table was unsuccessful, error code: %s\", msg))\n        else\n          logbug(\"lightgreen\", string.format(\"Variable '%s' created successfully.\", i));\n        end\n      else\n        if fibaro:getGlobalValue(i) ~= nil then\n          logbug(\"lightgreen\", string.format(\"Variable '%s' created successfully.\", i));\n        else\n          logbug(\"red\", string.format(\"ERROR - Variable '%s' was NOT created!\", i))\n        end\n      end\n    end\n  end\n  updateVar = true\nend\n\nfunction updateStatus()\n    local selfId = fibaro:getSelfId();\n    local iT = json.decode(fibaro:getGlobalValue(\"IconPreview\"))\n    fibaro:call(selfId, \"setProperty\", \"ui.Label1.value\", iT.secName)\n    fibaro:call(selfId, \"setProperty\", \"ui.Label2.value\", \"<img src=\"..iT.path..iT.lastIconName..\".png  style='width:96;height:96px;'>\")\n    fibaro:call(selfId, \"setProperty\", \"ui.Label3.value\", iT.lastIconID)\n    fibaro:call(selfId, \"setProperty\", \"ui.Label4.value\", iT.lastIconName..\".png\")\n    fibaro:call(selfId, \"setProperty\", \"ui.Label5.value\", iT.lastIcon..\"/\"..iT.maxIcon)\n    logbug(\"yellow\", \"Icon Preview VD updated\")\n    if iT.self_iconID > 0 then\n      fibaro:call(selfId, \"setProperty\", \"currentIcon\", iT.self_iconID);\n    end\n    fibaro:sleep(6000)\nend\n\nif not updateVar then\n  checkGlobalVariable(varName);\n  fibaro:sleep(500)\n  updateStatus()\nelse\n  updateStatus();\nend\n","ui.Label1.value":"Virtual devices","ui.Label2.value":"<img src=http://192.168.1.10/fibaro/n_vicons/User1157.png  style='width:96;height:96px;'>","ui.Label3.value":"1157","ui.Label4.value":"User1157.png","ui.Label5.value":"227/227","ui.Label6.value":"","visible":"true","rows":[{"type":"label","elements":[{"id":1,"lua":false,"waitForResponse":false,"caption":"Section","name":"Label1","favourite":false,"main":false}]},{"type":"label","elements":[{"id":2,"lua":false,"waitForResponse":false,"caption":"Icon","name":"Label2","favourite":false,"main":false}]},{"type":"label","elements":[{"id":3,"lua":false,"waitForResponse":false,"caption":"Icon ID","name":"Label3","favourite":false,"main":true}]},{"type":"label","elements":[{"id":4,"lua":false,"waitForResponse":false,"caption":"Icon Name","name":"Label4","favourite":false,"main":false}]},{"type":"label","elements":[{"id":5,"lua":false,"waitForResponse":false,"caption":"Icon No/Total","name":"Label5","favourite":false,"main":false}]},{"type":"button","elements":[{"id":6,"lua":true,"waitForResponse":false,"caption":"Previous icon","name":"Button11","empty":false,"msg":"--------------------------------------------------------------\n-- HC2 Icon Preview VD - Previous icon\n--------------------------------------------------------------\n\nlocal selfId = fibaro:getSelfId();\nlocal jIcon  = api.get(\"/icons\")\nlocal jNet   = api.get(\"/settings/network\")\nlocal iT     = json.decode(fibaro:getGlobalValue(\"IconPreview\"))\n\niT.maxIcon = #jIcon[iT.section]\nif iT.lastIcon > 1 then\n   iT.lastIcon = iT.lastIcon - 1\nelse\n  iT.lastIcon = iT.maxIcon\nend\niT.lastIconID   = jIcon[iT.section][iT.lastIcon].id\niT.lastIconName = jIcon[iT.section][iT.lastIcon].iconName\n\nfibaro:setGlobal(\"IconPreview\", json.encode(iT))\n\nfibaro:call(selfId, \"setProperty\", \"ui.Label1.value\", iT.secName)\nfibaro:call(selfId, \"setProperty\", \"ui.Label2.value\", \"<img src=\"..iT.path..iT.lastIconName..\".png  style='width:96;height:96px;'>\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label3.value\", iT.lastIconID)\nfibaro:call(selfId, \"setProperty\", \"ui.Label4.value\", iT.lastIconName..\".png\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label5.value\", iT.lastIcon..\"/\"..iT.maxIcon)\nif iT.self_iconID > 0 then\n  fibaro:call(selfId, \"setProperty\", \"currentIcon\", iT.self_iconID);\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":7,"lua":true,"waitForResponse":false,"caption":"Next icon","name":"Button12","empty":false,"msg":"--------------------------------------------------------------\n-- HC2 Icon Preview VD - Next icon\n--------------------------------------------------------------\n\nlocal selfId = fibaro:getSelfId();\nlocal jIcon  = api.get(\"/icons\")\nlocal jNet   = api.get(\"/settings/network\")\nlocal iT     = json.decode(fibaro:getGlobalValue(\"IconPreview\"))\n\niT.maxIcon = #jIcon[iT.section]\nif iT.lastIcon < iT.maxIcon then\n   iT.lastIcon = iT.lastIcon + 1\nelse\n  iT.lastIcon = 1\nend\niT.lastIconID   = jIcon[iT.section][iT.lastIcon].id\niT.lastIconName = jIcon[iT.section][iT.lastIcon].iconName\n\nfibaro:setGlobal(\"IconPreview\", json.encode(iT))\n\nfibaro:call(selfId, \"setProperty\", \"ui.Label1.value\", iT.secName)\nfibaro:call(selfId, \"setProperty\", \"ui.Label2.value\", \"<img src=\"..iT.path..iT.lastIconName..\".png  style='width:96;height:96px;'>\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label3.value\", iT.lastIconID)\nfibaro:call(selfId, \"setProperty\", \"ui.Label4.value\", iT.lastIconName..\".png\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label5.value\", iT.lastIcon..\"/\"..iT.maxIcon)\nif iT.self_iconID > 0 then\n  fibaro:call(selfId, \"setProperty\", \"currentIcon\", iT.self_iconID);\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":8,"lua":true,"waitForResponse":false,"caption":"First Icon","name":"Button21","empty":false,"msg":"--------------------------------------------------------------\n-- HC2 Icon Preview VD - First icon\n--------------------------------------------------------------\n\nlocal selfId = fibaro:getSelfId();\nlocal jIcon  = api.get(\"/icons\")\nlocal jNet   = api.get(\"/settings/network\")\nlocal iT     = json.decode(fibaro:getGlobalValue(\"IconPreview\"))\n\niT.maxIcon = #jIcon[iT.section]\niT.lastIcon = 1\niT.lastIconID   = jIcon[iT.section][iT.lastIcon].id\niT.lastIconName = jIcon[iT.section][iT.lastIcon].iconName\n\nfibaro:setGlobal(\"IconPreview\", json.encode(iT))\n\nfibaro:call(selfId, \"setProperty\", \"ui.Label1.value\", iT.secName)\nfibaro:call(selfId, \"setProperty\", \"ui.Label2.value\", \"<img src=\"..iT.path..iT.lastIconName..\".png  style='width:96;height:96px;'>\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label3.value\", iT.lastIconID)\nfibaro:call(selfId, \"setProperty\", \"ui.Label4.value\", iT.lastIconName..\".png\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label5.value\", iT.lastIcon..\"/\"..iT.maxIcon)\nif iT.self_iconID > 0 then\n  fibaro:call(selfId, \"setProperty\", \"currentIcon\", iT.self_iconID);\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":9,"lua":true,"waitForResponse":false,"caption":"Last Icon","name":"Button22","empty":false,"msg":"--------------------------------------------------------------\n-- HC2 Icon Preview VD - Last icon\n--------------------------------------------------------------\n\nlocal selfId = fibaro:getSelfId();\nlocal jIcon  = api.get(\"/icons\")\nlocal jNet   = api.get(\"/settings/network\")\nlocal iT     = json.decode(fibaro:getGlobalValue(\"IconPreview\"))\n\niT.maxIcon      = #jIcon[iT.section]\niT.lastIcon     = iT.maxIcon\niT.lastIconID   = jIcon[iT.section][iT.lastIcon].id\niT.lastIconName = jIcon[iT.section][iT.lastIcon].iconName\n\nfibaro:setGlobal(\"IconPreview\", json.encode(iT))\n\nfibaro:call(selfId, \"setProperty\", \"ui.Label1.value\", iT.secName)\nfibaro:call(selfId, \"setProperty\", \"ui.Label2.value\", \"<img src=\"..iT.path..iT.lastIconName..\".png  style='width:96;height:96px;'>\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label3.value\", iT.lastIconID)\nfibaro:call(selfId, \"setProperty\", \"ui.Label4.value\", iT.lastIconName..\".png\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label5.value\", iT.lastIcon..\"/\"..iT.maxIcon)\nif iT.self_iconID > 0 then\n  fibaro:call(selfId, \"setProperty\", \"currentIcon\", iT.self_iconID);\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"label","elements":[{"id":10,"lua":false,"waitForResponse":false,"caption":"Select section","name":"Label6","favourite":false,"main":false}]},{"type":"button","elements":[{"id":11,"lua":true,"waitForResponse":false,"caption":"VD Icons","name":"Button31","empty":false,"msg":"--------------------------------------------------------------\n-- HC2 Icon Preview VD - Select Virtual devices section\n--------------------------------------------------------------\nlocal selfId = fibaro:getSelfId();\nlocal jIcon  = api.get(\"/icons\")\nlocal jNet   = api.get(\"/settings/network\")\nlocal iT     = json.decode(fibaro:getGlobalValue(\"IconPreview\"))\n\niT.section      = \"virtualDevice\"\niT.secName      = \"Virtual devices\"\niT.path         = \"http://\"..jNet.ip..\"/fibaro/n_vicons/\"\niT.maxIcon      = #jIcon[iT.section]\niT.lastIcon     = 1\niT.lastIconID   = jIcon[iT.section][iT.lastIcon].id\niT.lastIconName = jIcon[iT.section][iT.lastIcon].iconName\n\nfibaro:setGlobal(\"IconPreview\", json.encode(iT))\n\nfibaro:call(selfId, \"setProperty\", \"ui.Label1.value\", iT.secName)\nfibaro:call(selfId, \"setProperty\", \"ui.Label2.value\", \"<img src=\"..iT.path..iT.lastIconName..\".png  style='width:96;height:96px;'>\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label3.value\", iT.lastIconID)\nfibaro:call(selfId, \"setProperty\", \"ui.Label4.value\", iT.lastIconName..\".png\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label5.value\", iT.lastIcon..\"/\"..iT.maxIcon)\nif iT.self_iconID > 0 then\n  fibaro:call(selfId, \"setProperty\", \"currentIcon\", iT.self_iconID);\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":12,"lua":true,"waitForResponse":false,"caption":"Scene Icons","name":"Button32","empty":false,"msg":"--------------------------------------------------------------\n-- HC2 Icon Preview VD - Select Scenes section\n--------------------------------------------------------------\nlocal selfId = fibaro:getSelfId();\nlocal jIcon  = api.get(\"/icons\")\nlocal jNet   = api.get(\"/settings/network\")\nlocal iT     = json.decode(fibaro:getGlobalValue(\"IconPreview\"))\n\niT.section      = \"scene\"\niT.secName      = \"Scenes\"\niT.path         = \"http://\"..jNet.ip..\"/fibaro/icons/scena/\"\niT.maxIcon      = #jIcon[iT.section]\niT.lastIcon     = 1\niT.lastIconID   = jIcon[iT.section][iT.lastIcon].id\niT.lastIconName = jIcon[iT.section][iT.lastIcon].iconName\n\nfibaro:setGlobal(\"IconPreview\", json.encode(iT))\n\nfibaro:call(selfId, \"setProperty\", \"ui.Label1.value\", iT.secName)\nfibaro:call(selfId, \"setProperty\", \"ui.Label2.value\", \"<img src=\"..iT.path..iT.lastIconName..\".png  style='width:96;height:96px;'>\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label3.value\", iT.lastIconID)\nfibaro:call(selfId, \"setProperty\", \"ui.Label4.value\", iT.lastIconName..\".png\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label5.value\", iT.lastIcon..\"/\"..iT.maxIcon)\nif iT.self_iconID > 0 then\n  fibaro:call(selfId, \"setProperty\", \"currentIcon\", iT.self_iconID);\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":13,"lua":true,"waitForResponse":false,"caption":"Room Icons","name":"Button41","empty":false,"msg":"--------------------------------------------------------------\n-- HC2 Icon Preview VD - Select Rooms section\n--------------------------------------------------------------\nlocal selfId = fibaro:getSelfId();\nlocal jIcon  = api.get(\"/icons\")\nlocal jNet   = api.get(\"/settings/network\")\nlocal iT     = json.decode(fibaro:getGlobalValue(\"IconPreview\"))\n\niT.section      = \"room\"\niT.secName      = \"Rooms\"\niT.path         = \"http://\"..jNet.ip..\"/fibaro/icons/rooms/\"\niT.maxIcon      = #jIcon[iT.section]\niT.lastIcon     = 1\niT.lastIconID   = jIcon[iT.section][iT.lastIcon].id\niT.lastIconName = jIcon[iT.section][iT.lastIcon].iconName\n\nfibaro:setGlobal(\"IconPreview\", json.encode(iT))\n\nfibaro:call(selfId, \"setProperty\", \"ui.Label1.value\", iT.secName)\nfibaro:call(selfId, \"setProperty\", \"ui.Label2.value\", \"<img src=\"..iT.path..iT.lastIconName..\".png  style='width:96;height:96px;'>\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label3.value\", iT.lastIconID)\nfibaro:call(selfId, \"setProperty\", \"ui.Label4.value\", iT.lastIconName..\".png\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label5.value\", iT.lastIcon..\"/\"..iT.maxIcon)\nif iT.self_iconID > 0 then\n  fibaro:call(selfId, \"setProperty\", \"currentIcon\", iT.self_iconID);\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":14,"lua":true,"waitForResponse":false,"caption":"Set VD Icon","name":"Button42","empty":false,"msg":"--------------------------------------------------------------\n-- HC2 Icon Preview VD - Set VD icon\n--------------------------------------------------------------\n\nlocal selfId = fibaro:getSelfId();\nlocal jIcon  = api.get(\"/icons\")\nlocal jNet   = api.get(\"/settings/network\")\nlocal iT     = json.decode(fibaro:getGlobalValue(\"IconPreview\"))\n\niT.maxIcon      = #jIcon[iT.section]\nif iT.section == \"virtualDevice\" then\n  iT.self_iconID  = iT.lastIconID\nelse\n  iT.self_iconID  = 1\nend\nfibaro:setGlobal(\"IconPreview\", json.encode(iT))\n\nfibaro:call(selfId, \"setProperty\", \"ui.Label1.value\", iT.secName)\nfibaro:call(selfId, \"setProperty\", \"ui.Label2.value\", \"<img src=\"..iT.path..iT.lastIconName..\".png  style='width:96;height:96px;'>\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label3.value\", iT.lastIconID)\nfibaro:call(selfId, \"setProperty\", \"ui.Label4.value\", iT.lastIconName..\".png\")\nfibaro:call(selfId, \"setProperty\", \"ui.Label5.value\", iT.lastIcon..\"/\"..iT.maxIcon)\nif iT.self_iconID > 0 then\n  fibaro:call(selfId, \"setProperty\", \"currentIcon\", iT.self_iconID);\nend\n","buttonIcon":0,"favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}